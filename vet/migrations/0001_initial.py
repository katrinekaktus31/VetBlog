# Generated by Django 3.2.7 on 2021-10-18 14:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{3}-\\d{4}$')], verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Адресса')),
                ('user_photo', models.ImageField(blank=True, upload_to='user_photo_images/%Y/%m/%d/', verbose_name='Фото')),
                ('position', models.CharField(blank=True, max_length=150, verbose_name='Посада')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
                'ordering': ['last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Animal_breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breed', models.CharField(max_length=150, verbose_name='Порода тварини')),
            ],
            options={
                'verbose_name': 'Порода тварини',
                'verbose_name_plural': 'Породи тварин',
            },
        ),
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150, verbose_name='Назва захворювання')),
                ('feature', models.TextField(blank=True, verbose_name='Ознаки захворювання')),
                ('treatment', models.TextField(blank=True, verbose_name='Рекомендації щодо лікуання')),
                ('photo', models.ImageField(blank=True, upload_to='images/%Y/%m/%d/', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Захворювання',
                'verbose_name_plural': 'Захворювання',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='PhotoImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, upload_to='images/%Y/%m/%d/', verbose_name='Фото')),
                ('diseases', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='vet.diseases')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Титул')),
                ('content', models.TextField(blank=True, verbose_name='Контент')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публікації')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата оновлення')),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', verbose_name='Фото')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Новина',
                'verbose_name_plural': 'Новини',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_name', models.CharField(max_length=150, verbose_name='Кличка тварини')),
                ('animal_weight', models.FloatField(verbose_name='Вага тварини')),
                ('animal_age', models.FloatField(verbose_name='Вік тварини')),
                ('kind_of_animal', models.CharField(choices=[('кішка', 'Кішка'), ('сука', 'Сука')], max_length=150, verbose_name='Вид тварини')),
                ('animal_owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Господар тварини')),
                ('bread', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='vet.animal_breed', verbose_name='Порода тварини')),
                ('diseases', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='vet.diseases', verbose_name='Захворювання')),
            ],
            options={
                'verbose_name': 'Тварина',
                'verbose_name_plural': 'Тварини',
                'ordering': ['animal_name'],
            },
        ),
    ]
